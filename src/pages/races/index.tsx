import classNames from "classnames";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { RaceCard } from "~/components/RaceCard";

export const races = [
  { id: 0, name: "zerg", raceImg: "/images/zerg.jpg" },
  { id: 1, name: "protoss", raceImg: "/images/protoss.jpg" },
  { id: 2, name: "terran", raceImg: "/images/terran.jpg" },
];

const FindBuildsPage: NextPage = () => {
  const [yourRace, setYourRace] = useState("");
  const [opponentRace, setOpponentRace] = useState("");

  const disabledLink =
    yourRace && opponentRace ? "" : "cursor-not-allowed bg-gray-500";

  const href =
    yourRace && opponentRace
      ? `/races/${yourRace}/match-ups/${opponentRace}`
      : "#";

  return (
    <>
      <Head>
        <title>Races</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center gap-8 ">
        <h1 className="text-4xl font-bold">Select Race</h1>
        <section className="flex w-full items-center justify-center gap-5 px-5">
          <section className="flex flex-col items-center justify-center gap-5">
            <h2 className="text-xl font-semibold">Your Race</h2>
            <div className="flex gap-5">
              {races.map(({ id, name, raceImg }) => (
                <RaceCard
                  key={id}
                  raceName={name}
                  raceImageSrc={raceImg}
                  tabIndex={id}
                  selectRace={() => setYourRace(name)}
                />
              ))}
            </div>
            <p className="flex items-baseline gap-4">
              <b>Your Race: </b>
              <span className="font-semibold text-blue-700">{yourRace}</span>
            </p>
          </section>
          <b className="text-2xl">VS</b>
          <section className="flex flex-col items-center justify-center gap-5">
            <h2 className="text-xl font-semibold">Opponent&apos;s Race</h2>
            <div className="flex gap-5">
              {races.map(({ id, name, raceImg }) => (
                <RaceCard
                  key={id}
                  raceName={name}
                  raceImageSrc={raceImg}
                  tabIndex={id}
                  isOpponent
                  selectRace={() => setOpponentRace(name)}
                />
              ))}
            </div>
            <p className="flex items-baseline gap-4">
              <b>Opponent&apos;s Race: </b>
              <span className="font-semibold text-red-700">{opponentRace}</span>
            </p>
          </section>
        </section>
        <Link
          href={href}
          className={classNames(
            "inline-flex items-center rounded-lg bg-blue-700 px-3 py-2 text-center text-sm font-medium text-white focus:right-4 focus:outline-none focus:ring-blue-300",
            disabledLink
          )}
        >
          View Builds
          <svg
            aria-hidden="true"
            className="ml-2 -mr-1 h-4 w-4"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fillRule="evenodd"
              d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
              clipRule="evenodd"
            ></path>
          </svg>
        </Link>
      </main>
    </>
  );
};

export default FindBuildsPage;
